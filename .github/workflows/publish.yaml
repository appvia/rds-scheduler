name: Publish Assets

on:
  push:
    branches: [master]
    tags:
      - "v*"

jobs:
  build:
    uses: ./.github/workflows/test.yaml
    secrets: inherit

  push-image:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
      - uses: rlespinasse/github-slug-action@v3.x


      - name: Retrieve Image
        uses: actions/download-artifact@v2
        with:
          name: rds-scheduler-image
          path: /tmp

      - name: Load Image
        run: |
          docker load -i /tmp/rds-scheduler-image.tar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: 'arn:aws:iam::672033841050:role/github-ecr-push-pull'
          role-duration-seconds: 900
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push api image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: rds-scheduler
          IMAGE_TAG: ${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }}
          LOCAL_IMAGE: quay.io/appvia/rds-scheduler:ci
        run: |
          echo pushing $LOCAL_IMAGE as $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $LOCAL_IMAGE $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo pushed $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
